rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - only authenticated users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all users
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Allow admins to write all users
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Appointments collection - authenticated users can create/read/update/delete their own appointments
    match /appointments/{appointmentId} {
      // Allow read/write if user is authenticated and owns the appointment
      allow read, write: if request.auth != null && 
        (resource == null || resource.data.createdBy == request.auth.uid);
      
      // Allow admins to read/write all appointments
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Ensure createdBy field is set to current user on create
      allow create: if request.auth != null && 
        request.resource.data.createdBy == request.auth.uid;
    }
    
    // Pages collection (if you have static pages)
    match /pages/{pageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Content collection (if you have dynamic content)
    match /content/{contentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
}